{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project4Full\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home({\n  setIsLoggedIn\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]); // State to store questions\n  const [activeQuestion, setActiveQuestion] = useState(null); // State to store the active question\n\n  // Fetch questions from the backend API when the component mounts\n  useEffect(() => {\n    fetch('http://localhost:5004/api/questions').then(response => response.json()).then(data => {\n      setQuestions(data); // Set questions state with the fetched data\n      if (data.length > 0) {\n        setActiveQuestion(data[0]); // Set the first question as the default active one\n      }\n    }).catch(error => console.error('Error fetching questions:', error));\n  }, []);\n  const handleLogout = () => {\n    navigate('/login');\n  };\n  const handleTabClick = questionId => {\n    // Find the question by its ID and set it as the active question\n    const selectedQuestion = questions.find(q => q.id === questionId);\n    setActiveQuestion(selectedQuestion);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-title\",\n        onClick: () => navigate('/'),\n        children: \"App Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: questions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTabClick(question.id),\n              className: activeQuestion && activeQuestion.id === question.id ? 'active-tab' : '',\n              children: question.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: activeQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: activeQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: activeQuestion.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a question from the tabs to view the answer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"C1PK7Z4AMWIWOEHr5ZwQ4EVfMgk=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","setIsLoggedIn","_s","navigate","questions","setQuestions","activeQuestion","setActiveQuestion","fetch","then","response","json","data","length","catch","error","console","handleLogout","handleTabClick","questionId","selectedQuestion","find","q","id","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","question","answer","_c","$RefreshReg$"],"sources":["D:/Project4Full/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Home({ setIsLoggedIn }) {\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]); // State to store questions\r\n  const [activeQuestion, setActiveQuestion] = useState(null); // State to store the active question\r\n\r\n  // Fetch questions from the backend API when the component mounts\r\n  useEffect(() => {\r\n    fetch('http://localhost:5004/api/questions')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setQuestions(data); // Set questions state with the fetched data\r\n        if (data.length > 0) {\r\n          setActiveQuestion(data[0]); // Set the first question as the default active one\r\n        }\r\n      })\r\n      .catch((error) => console.error('Error fetching questions:', error));\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleTabClick = (questionId) => {\r\n    // Find the question by its ID and set it as the active question\r\n    const selectedQuestion = questions.find((q) => q.id === questionId);\r\n    setActiveQuestion(selectedQuestion);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      {/* Top Navbar with App Title on the Left and Logout Button on the Right */}\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-title\" onClick={() => navigate('/')}>App Title</div>\r\n        <button onClick={handleLogout} className=\"logout-button\">Logout</button>\r\n      </nav>\r\n\r\n      <div className=\"content\">\r\n        {/* Left Sidebar with Tabs */}\r\n        <div className=\"sidebar\">\r\n          <ul>\r\n            {questions.map((question) => (\r\n              <li key={question.id}>\r\n                <button\r\n                  onClick={() => handleTabClick(question.id)}\r\n                  className={activeQuestion && activeQuestion.id === question.id ? 'active-tab' : ''}\r\n                >\r\n                  {question.question}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Main Content Area */}\r\n        <div className=\"main-content\">\r\n          {activeQuestion ? (\r\n            <>\r\n              <h1>{activeQuestion.question}</h1>\r\n              <p>{activeQuestion.answer}</p>\r\n            </>\r\n          ) : (\r\n            <p>Select a question from the tabs to view the answer.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}