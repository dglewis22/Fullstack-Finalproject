{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project4Full\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home({\n  setIsLoggedIn\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [topics, setTopics] = useState([]); // State to store topics\n  const [selectedTopic, setSelectedTopic] = useState(null); // State to store the selected topic\n  const [questions, setQuestions] = useState([]); // State to store questions for the selected topic\n\n  // Fetch topics and questions when the component mounts\n  useEffect(() => {\n    // Fetch topics first\n    fetch('http://localhost:5004/api/topics').then(response => response.json()).then(data => {\n      setTopics(data); // Set topics state with the fetched data\n    }).catch(error => console.error('Error fetching topics:', error));\n  }, []);\n\n  // Fetch questions based on the selected topic\n  useEffect(() => {\n    if (selectedTopic) {\n      // Fetch questions for the selected topic\n      fetch(`http://localhost:5004/api/questions/${selectedTopic.id}`).then(response => response.json()).then(data => {\n        setQuestions(data); // Set questions state with the fetched data\n      }).catch(error => console.error('Error fetching questions:', error));\n    }\n  }, [selectedTopic]);\n  const handleLogout = () => {\n    navigate('/login');\n  };\n  const handleTopicClick = topicId => {\n    // Find the selected topic and set it as the selected topic\n    const topic = topics.find(t => t.id === topicId);\n    setSelectedTopic(topic);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-title\",\n        onClick: () => navigate('/'),\n        children: \"App Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTopicClick(topic.id),\n              className: selectedTopic && selectedTopic.id === topic.id ? 'active-tab' : '',\n              children: topic.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, topic.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: selectedTopic ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: selectedTopic.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedTopic.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), questions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: questions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: question.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: question.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this)]\n            }, question.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No questions available for this topic.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a topic from the left sidebar to view questions and answers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"MkB8pjmCBd67VRHRCLVmFngRfDo=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","setIsLoggedIn","_s","navigate","topics","setTopics","selectedTopic","setSelectedTopic","questions","setQuestions","fetch","then","response","json","data","catch","error","console","id","handleLogout","handleTopicClick","topicId","topic","find","t","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","name","description","length","question","answer","_c","$RefreshReg$"],"sources":["D:/Project4Full/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Home({ setIsLoggedIn }) {\r\n  const navigate = useNavigate();\r\n  const [topics, setTopics] = useState([]); // State to store topics\r\n  const [selectedTopic, setSelectedTopic] = useState(null); // State to store the selected topic\r\n  const [questions, setQuestions] = useState([]); // State to store questions for the selected topic\r\n\r\n  // Fetch topics and questions when the component mounts\r\n  useEffect(() => {\r\n    // Fetch topics first\r\n    fetch('http://localhost:5004/api/topics')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setTopics(data); // Set topics state with the fetched data\r\n      })\r\n      .catch((error) => console.error('Error fetching topics:', error));\r\n  }, []);\r\n\r\n  // Fetch questions based on the selected topic\r\n  useEffect(() => {\r\n    if (selectedTopic) {\r\n      // Fetch questions for the selected topic\r\n      fetch(`http://localhost:5004/api/questions/${selectedTopic.id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setQuestions(data); // Set questions state with the fetched data\r\n        })\r\n        .catch((error) => console.error('Error fetching questions:', error));\r\n    }\r\n  }, [selectedTopic]);\r\n\r\n  const handleLogout = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleTopicClick = (topicId) => {\r\n    // Find the selected topic and set it as the selected topic\r\n    const topic = topics.find((t) => t.id === topicId);\r\n    setSelectedTopic(topic);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      {/* Top Navbar with App Title on the Left and Logout Button on the Right */}\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-title\" onClick={() => navigate('/')}>App Title</div>\r\n        <button onClick={handleLogout} className=\"logout-button\">Logout</button>\r\n      </nav>\r\n\r\n      <div className=\"content\">\r\n        {/* Left Sidebar with Topics */}\r\n        <div className=\"sidebar\">\r\n          <ul>\r\n            {topics.map((topic) => (\r\n              <li key={topic.id}>\r\n                <button\r\n                  onClick={() => handleTopicClick(topic.id)}\r\n                  className={selectedTopic && selectedTopic.id === topic.id ? 'active-tab' : ''}\r\n                >\r\n                  {topic.name}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Main Content Area */}\r\n        <div className=\"main-content\">\r\n          {selectedTopic ? (\r\n            <>\r\n              <h1>{selectedTopic.name}</h1>\r\n              <p>{selectedTopic.description}</p>\r\n\r\n              {/* Display Questions and Answers for the Selected Topic */}\r\n              {questions.length > 0 ? (\r\n                <ul>\r\n                  {questions.map((question) => (\r\n                    <li key={question.id}>\r\n                      <h3>{question.question}</h3>\r\n                      <p>{question.answer}</p>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <p>No questions available for this topic.</p>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <p>Select a topic from the left sidebar to view questions and answers.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}